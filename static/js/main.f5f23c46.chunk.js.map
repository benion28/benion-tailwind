{"version":3,"sources":["components/ImageCard.jsx","components/ImageSearch.jsx","App.js","index.js"],"names":["ImageCard","image","tags","split","className","src","webformatURL","alt","user","views","downloads","likes","map","tag","index","key","ImageSearch","searchText","useState","text","setText","onSubmit","event","preventDefault","onChange","target","value","type","placeholder","App","images","setImages","isLoading","setIsLoading","term","setTerm","useEffect","fetch","process","then","response","json","data","hits","catch","error","console","log","length","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kLAsCeA,EApCG,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACbC,EAAOD,EAAMC,KAAKC,MAAM,KAE9B,OACE,yBAAKC,UAAU,8CACb,yBAAKC,IAAKJ,EAAMK,aAAcC,IAAI,GAAGH,UAAU,WAC/C,yBAAKA,UAAU,aACb,yBAAKA,UAAU,0CAAf,YACYH,EAAMO,MAElB,4BACE,4BACE,2CACCP,EAAMQ,OAET,4BACE,+CACCR,EAAMS,WAET,4BACE,2CACCT,EAAMU,SAIb,yBAAKP,UAAU,aACZF,EAAKU,KAAI,SAACC,EAAKC,GAAN,OACR,0BAAMC,IAAMD,EAAQV,UAAU,4FAA9B,IACIS,SCNCG,EAtBK,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EAEVC,mBAAS,IAFC,mBAE5BC,EAF4B,KAEtBC,EAFsB,KAQpC,OACI,yBAAKhB,UAAU,kDACX,0BAAMiB,SAPC,SAACC,GACZA,EAAMC,iBACNN,EAAWE,IAKmBf,UAAU,mBAChC,yBAAKA,UAAU,8DACX,2BAAOoB,SAAW,SAAAF,GAAK,OAAIF,EAAQE,EAAMG,OAAOC,QAAStB,UAAU,kHAAkHuB,KAAK,OAAOC,YAAY,yBAC7M,4BAAQxB,UAAU,kIAAkIuB,KAAK,UAAzJ,cCkBLE,MA7Bf,WAAgB,IAAD,EAEiBX,mBAAS,IAF1B,mBAELY,EAFK,KAEGC,EAFH,OAGuBb,oBAAS,GAHhC,mBAGLc,EAHK,KAGMC,EAHN,OAIaf,mBAAS,IAJtB,mBAILgB,EAJK,KAICC,EAJD,KAgBb,OAVAC,qBAAU,WACRC,MAAM,gCAAD,OAAkCC,qCAAlC,cAA+EJ,EAA/E,kCACJK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJX,EAAUW,EAAKC,MACfV,GAAa,MAEdW,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QAC3B,CAACX,IAGF,yBAAK9B,UAAU,qBACb,kBAAC,EAAD,CAAaa,WAAa,SAACE,GAAD,OAAUgB,EAAQhB,OACzCa,GAA+B,IAAlBF,EAAOkB,QAAiB,wBAAI5C,UAAU,sCAAd,mBACtC4B,EAAY,wBAAI5B,UAAU,sCAAd,sBAA6E,yBAAKA,UAAU,0BACtG0B,EAAOlB,KAAI,SAAAX,GAAK,OAChB,kBAAC,EAAD,CAAWc,IAAMd,EAAMgD,GAAKhD,MAAQA,UCrB9CiD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.f5f23c46.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst ImageCard = ({ image }) => {\r\n  const tags = image.tags.split(\",\");\r\n\r\n  return (\r\n    <div className=\"max-w-sm rounded overflow-hidden shadow-lg\">\r\n      <img src={image.webformatURL} alt=\"\" className=\"w-full\" />\r\n      <div className=\"px-6 py-4\">\r\n        <div className=\"text-bold text-purple-500 text-xl mb-2\">\r\n          Photo By {image.user}\r\n        </div>\r\n        <ul>\r\n          <li>\r\n            <strong>Views: </strong>\r\n            {image.views}\r\n          </li>\r\n          <li>\r\n            <strong>Downloads: </strong>\r\n            {image.downloads}\r\n          </li>\r\n          <li>\r\n            <strong>Likes: </strong>\r\n            {image.likes}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"px-6 py-4\">\r\n        {tags.map((tag, index) => (\r\n          <span key={ index } className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2\">\r\n            #{tag}\r\n          </span>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageCard;\r\n","import React, { useState } from 'react';\r\n\r\nconst ImageSearch = ({ searchText }) => {\r\n\r\n    const [ text, setText ] = useState(\"\");\r\n    const submit = (event) => {\r\n        event.preventDefault();\r\n        searchText(text);\r\n    };\r\n\r\n    return (\r\n        <div className=\"max-w-sm rounded overflow-hidden my-10 mx-auto\">\r\n            <form onSubmit={ submit } className=\"w-full max-w-sm\">\r\n                <div className=\"flex items-center border-b border-b-2 border-teal-500 py-2\">\r\n                    <input onChange={ event => setText(event.target.value) } className=\"appearance-nono bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none\" type=\"text\" placeholder=\"Search Image Term...\" />\r\n                    <button className=\"flex-shrink-0 bg-teal-500 hover:bg-teal-700 border-teal-500 hover:border-teal-700 text-sm border-4 text-white py-1 px-2 rounded\" type=\"submit\">\r\n                        Search\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageSearch;\r\n","import React, { useState, useEffect} from \"react\";\nimport ImageCard from \"./components/ImageCard\";\nimport ImageSearch from \"./components/ImageSearch\";\n\nfunction App() {\n\n  const [ images, setImages ] = useState([]);\n  const [ isLoading, setIsLoading ] = useState(true);\n  const [ term, setTerm ] = useState(\"\");\n\n  useEffect(() => {\n    fetch(`https://pixabay.com/api/?key=${ process.env.REACT_APP_PIXABAY_API_KEY }&q=${ term }&image_type=photo&pretty=true`)\n    .then(response => response.json())\n    .then(data => {\n      setImages(data.hits);\n      setIsLoading(false);\n    })\n    .catch(error => console.log(error));\n  }, [term]);\n\n  return (\n    <div className=\"container mx-auto\">\n      <ImageSearch searchText={ (text) => setTerm(text) } />\n      { !isLoading && images.length === 0 &&  <h1 className=\"text-6xl text-center mx-auto mt-32\">No Images Found</h1> }\n      { isLoading ? <h1 className=\"text-6xl text-center mx-auto mt-32\">Images Are Loading</h1> : <div className=\"grid grid-cols-3 gap-4\">\n        { images.map(image => (\n          <ImageCard key={ image.id } image={ image } />\n        )) }\n      </div> }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/main.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}